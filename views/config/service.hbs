<div class="d-sm-flex align-items-center justify-content-between mb-1">
    <h1 class="h3 mb-0 text-gray-800">

        <small><i class="fas fa-cog fa-fw"></i></small>
        Service
    </h1>
</div>

<p class="mb-4">General settings for EmailEngine.</p>

<form method="post" id="settings-form" action="/admin/config/service">
    <input type="hidden" id="crumb" name="crumb" value="{{crumb}}" />

    <div class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">General Settings</h6>
        </div>
        <div class="card-body">

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">serviceUrl</a>]</div>

                <label for="settingsServiceUrl">Service URL</label>
                <input type="url" class="form-control {{#if errors.serviceUrl}}is-invalid{{/if}}"
                    id="settingsServiceUrl" name="serviceUrl" value="{{values.serviceUrl}}" data-lpignore="true"
                    autocomplete="off" />
                {{#if errors.serviceUrl}}
                <span class="invalid-feedback">{{errors.serviceUrl}}</span>
                {{/if}}
                <small class="form-text text-muted">The base URL for EmailEngine, excluding any path components.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">enableApiProxy</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.enableApiProxy}}is-invalid{{/if}}"
                    id="enableApiProxy" name="enableApiProxy" {{#if values.enableApiProxy}}checked{{/if}} />
                <label class="form-check-label" for="enableApiProxy">Reverse Proxy Support</label>
                {{#if errors.enableApiProxy}}
                <span class="invalid-feedback">{{errors.enableApiProxy}}</span>
                {{/if}}
                <small class="form-text text-muted">Enable this option if EmailEngine is behind a reverse proxy (e.g.,
                    Nginx or Caddy) to correctly identify the client IP address using the <code>X-Forwarded-For</code>
                    header. Disable this if EmailEngine handles web requests directly without a reverse proxy.</small>
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">locale</a>]</div>

                <label for="settingsServiceLocale">Default Language</label>
                <select id="settingsServiceLocale" class="custom-select custom-select-sm" name="locale" {{#if
                    errors.locale}}is-invalid{{/if}}>
                    {{#each locales}}
                    <option value="{{locale}}" {{#if selected}}selected{{/if}}>{{name}}</option>
                    {{/each}}
                </select>
                {{#if errors.locale}}
                <span class="invalid-feedback">{{errors.locale}}</span>
                {{/if}}
                <small class="form-text text-muted">Select the language for <u data-toggle="popover"
                        data-trigger="hover" data-html="true"
                        data-content="&#x3C;img src=&#x22;/static/preview/translation.png&#x22; width=&#x22;250&#x22; &#x3E;"
                        style="cursor: default;">public-facing pages</u>, such as the <a
                        href="https://emailengine.app/hosted-authentication" target="_blank" rel="noopener noreferrer"
                        referrerpolicy="no-referrer">hosted authentication</a>
                    form. <a href="https://github.com/postalsys/emailengine/blob/master/translations/README.md"
                        target="_blank" rel="noopener noreferrer" referrerpolicy="no-referrer">Learn more about adding
                        additional translations.</a></small>
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">timezone</a>]</div>

                <label for="settingsServiceTimezone">Default Timezone</label>
                <select id="settingsServiceTimezone" class="custom-select custom-select-sm" name="timezone" {{#if
                    errors.timezone}}is-invalid{{/if}}>
                    {{#each timezones}}
                    <option value="{{timezone}}" {{#if selected}}selected{{/if}}>{{name}}</option>
                    {{/each}}
                </select>
                {{#if errors.timezone}}
                <span class="invalid-feedback">{{errors.timezone}}</span>
                {{/if}}
            </div>
        </div>
    </div>

    <div class="card mb-4" id="security">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Security settings</h6>
        </div>
        <div class="card-body">

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">serviceSecret</a>]</div>

                <label for="settingsServiceSecret">Service Secret</label>

                <div class="input-group">
                    <input type="password" class="form-control {{#if errors.serviceSecret}}is-invalid{{/if}}"
                        id="settingsServiceSecret" name="serviceSecret" value="{{values.serviceSecret}}"
                        data-lpignore="true" autocomplete="off" />

                    <div class="input-group-append">
                        <button class="btn btn-outline-primary" type="button" id="showServiceSecret"><i
                                class="fas fa-eye"></i></button>
                    </div>
                </div>

                {{#if errors.serviceSecret}}
                <span class="invalid-feedback">{{errors.serviceSecret}}</span>
                {{/if}}
                <small class="form-text text-muted">HMAC secret used for signing public requests. Changing this value
                    will invalidate all tracking links in emails sent with tracking enabled.</small>
            </div>

            <div class="form-group form-check">

                <div class="text-muted float-right code-link">[<em>Web UI only</em>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.enableTokens}}is-invalid{{/if}}"
                    id="enableTokens" name="enableTokens" {{#if values.enableTokens}}checked{{/if}} />
                <label class="form-check-label" for="enableTokens">Require Access Tokens

                    <span class="badge badge-{{#if values.enableTokens}}success{{else}}danger{{/if}}">{{#if
                        values.enableTokens}}enabled{{else}}disabled{{/if}}</span>
                </label>
                {{#if errors.enableTokens}}
                <span class="invalid-feedback">{{errors.enableTokens}}</span>
                {{/if}}
                <small class="form-text text-muted">Disable this option during development to simplify running API
                    requests from the command line. However, it is recommended to always enable access tokens in
                    production to ensure secure API request authorization.</small>
            </div>

            <div class="form-group form-check">

                <div class="text-muted float-right code-link">[<a
                        href="https://docs.emailengine.app/enabling-secret-encryption/" target="_blank"
                        rel="noopener noreferrer" referrerpolicy="no-referrer">EENGINE_SECRET</a>]</div>

                <input type="checkbox" class="form-check-input" id="encryption" {{#if encryption}}checked{{/if}}
                    disabled />
                <label class="form-check-label" for="encryption">Field-Level Encryption

                    <span class="badge badge-{{#if encryption}}success{{else}}danger{{/if}}">{{#if
                        encryption}}enabled{{else}}disabled{{/if}}</span>

                </label>
                <small class="form-text text-muted">Encryption settings cannot be changed at runtime. To enable
                    encryption, set the <code>EENGINE_SECRET</code> environment variable when starting EmailEngine. For
                    more information, refer to the <a href="https://docs.emailengine.app/enabling-secret-encryption/"
                        target="_blank" rel="noopener noreferrer"
                        referrerpolicy="no-referrer">documentation</a>.</small>
            </div>


            <div class="form-group form-check">

                <div class="text-muted float-right code-link">[EENGINE_ADMIN_ACCESS_ADDRESSES]</div>

                <input type="checkbox" class="form-check-input" id="adminAccessLimit" {{#if
                    adminAccessLimit}}checked{{/if}} disabled />
                <label class="form-check-label" for="adminAccessLimit">Limit Access to Admin Interface

                    <span class="badge badge-{{#if adminAccessLimit}}success{{else}}danger{{/if}}">{{#if
                        adminAccessLimit}}enabled{{else}}disabled{{/if}}</span>

                </label>
                <small class="form-text text-muted">Access to the Admin interface cannot be modified at runtime. To
                    restrict access to EmailEngine's Admin interface while keeping other parts of the app open, set the
                    <code>EENGINE_ADMIN_ACCESS_ADDRESSES</code> environment variable when starting EmailEngine. Provide
                    a comma-separated list of IP addresses that are permitted to access the Admin interface.</small>
            </div>


            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<em>Web UI only</em>]</div>
                <input type="checkbox" class="form-check-input {{#if errors.enableOAuthTokensApi}}is-invalid{{/if}}"
                    id="enableOAuthTokensApi" name="enableOAuthTokensApi" {{#if
                    values.enableOAuthTokensApi}}checked{{/if}} />
                <label class="form-check-label" for="enableOAuthTokensApi">Allow API Endpoint for Fetching OAuth2 Access
                    Tokens</label>
                {{#if errors.enableOAuthTokensApi}}
                <span class="invalid-feedback">{{errors.enableOAuthTokensApi}}</span>
                {{/if}}
                <small class="form-text text-muted">Enable this option if you need to reuse OAuth2 access tokens managed
                    by EmailEngine in other parts of your application. Note that <a
                        href="/admin/swagger#/Account/getV1AccountAccountOauthtoken" target="_blank"
                        rel="noopener noreferrer">access to OAuth2 tokens</a> is disabled by default due to the
                    potential security risks of leaking these tokens.</small>
            </div>


            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">ignoreMailCertErrors</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.ignoreMailCertErrors}}is-invalid{{/if}}"
                    id="ignoreMailCertErrors" name="ignoreMailCertErrors" {{#if
                    values.ignoreMailCertErrors}}checked{{/if}} />
                <label class="form-check-label" for="ignoreMailCertErrors">Allow Insecure Certificates for IMAP/SMTP

                    <span class="badge badge-{{#if values.ignoreMailCertErrors}}danger{{else}}success{{/if}}">{{#if
                        values.ignoreMailCertErrors}}enabled{{else}}disabled{{/if}}</span>

                </label>
                {{#if errors.ignoreMailCertErrors}}
                <span class="invalid-feedback">{{errors.ignoreMailCertErrors}}</span>
                {{/if}}
                <small class="form-text text-muted">Enabling this option allows EmailEngine to bypass security warnings
                    related to self-signed or expired TLS certificates during IMAP and SMTP operations. Use with
                    caution.</small>
            </div>

        </div>
    </div>

    <div id="queue_settings" class="card mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Queue settings</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                    aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Queue actions:</div>
                    <a class="dropdown-item" href="#" id="clean-queues-btn">
                        <i class="fas fa-trash-alt fa-sm clean-icon"></i> <span>Clear completed queue entries</span>
                    </a>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">queueKeep</a>]</div>

                <label for="settingsQueueKeep">How many completed/failed queue entries to keep</label>
                <input type="number" min="0" class="form-control {{#if errors.queueKeep}}is-invalid{{/if}}"
                    id="settingsQueueKeep" name="queueKeep" value="{{values.queueKeep}}" data-lpignore="true"
                    autocomplete="off" />
                {{#if errors.queueKeep}}
                <span class="invalid-feedback">{{errors.queueKeep}}</span>
                {{/if}}
                <small class="form-text text-muted">By default, all queued job entries are deleted after processed, so
                    "Failed" and "Completed" lists are empty in <a href="/admin/bull-board" target="_blank"
                        rel="noopener noreferrer">Bull Board</a>.
                    Set this value if you want to keep a fixed number of the latest entries in the list.</small>
            </div>

        </div>
    </div>

    <div id="submission_settings" class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Email submission settings</h6>
        </div>
        <div class="card-body">
            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">deliveryAttempts</a>]</div>

                <label for="settingsDeliveryAttempts">How many times to retry a failed email sending</label>
                <input type="number" min="0" class="form-control {{#if errors.deliveryAttempts}}is-invalid{{/if}}"
                    id="settingsDeliveryAttempts" name="deliveryAttempts" value="{{values.deliveryAttempts}}"
                    data-lpignore="true" autocomplete="off" />
                {{#if errors.deliveryAttempts}}
                <span class="invalid-feedback">{{errors.deliveryAttempts}}</span>
                {{/if}}
                <small class="form-text text-muted">If EmailEngine cannot deliver an email to an SMTP server, it will
                    attempt to retry the action for the specified number of attempts.</small>
            </div>

        </div>
    </div>

    <div id="submission_settings" class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">IMAP processing settings</h6>
        </div>
        <div class="card-body">
            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">imapIndexer</a>]</div>

                <label for="settingsImapIndexer">Indexing Method for IMAP Accounts</label>


                <select id="settingsImapIndexer" class="custom-select custom-select-sm" name="imapIndexer" {{#if
                    errors.imapIndexer}}is-invalid{{/if}}>
                    {{#each imapIndexers}}
                    <option value="{{id}}" {{#if selected}}selected{{/if}}>{{name}}</option>
                    {{/each}}
                </select>


                {{#if errors.imapIndexer}}
                <span class="invalid-feedback">{{errors.imapIndexer}}</span>
                {{/if}}
                <small class="form-text text-muted">Specifies the default indexing method for IMAP accounts. Select
                    <em>"full"</em> to build a comprehensive index that tracks deleted and updated emails, or
                    <em>"fast"</em> to detect only newly received emails. You can also customize this setting in each
                    account's settings to use different indexing methods for different accounts.<br>
                    <em>Note:</em> Changing this setting applies only to new accounts. To change the indexer for
                    existing accounts, you must perform an <a
                        href="/admin/swagger#/Account/putV1AccountAccountFlush">account flush</a>.</small>
            </div>

        </div>
    </div>

    <div id="templates_settings" class="card mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Public website templates</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                    aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Template actions:</div>
                    <a class="dropdown-item" href="#" id="preview-header-btn">
                        <i class="fas fa-eye fa-sm"></i> <span>Preview</span>
                    </a>
                </div>
            </div>
        </div>
        <div class="card-body">

            <p>These settings apply to all publicly accessible pages, such as 404 error pages, the hosted authentication
                form, and the virtual mailing list unsubscribe page.</p>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">pageBrandName</a>]</div>

                <label for="settingsPageBrandName">Brand name</label>
                <input type="text" class="form-control {{#if errors.pageBrandName}}is-invalid{{/if}}"
                    id="settingsPageBrandName" name="pageBrandName" value="{{values.pageBrandName}}"
                    data-lpignore="true" autocomplete="off" placeholder="Brand name like &quot;EmailEngine&quot;" />
                {{#if errors.pageBrandName}}
                <span class="invalid-feedback">{{errors.pageBrandName}}</span>
                {{/if}}
                <small class="form-text text-muted">Brand name to use in the HTML title element (defaults to
                    <em>"EmailEngine"</em>)</small>
            </div>

            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">templateHeader</a>]</div>

                <label>Header HTML for Public Pages</label>

                <input type="hidden" class="{{#if errors.templateHeader}}is-invalid{{/if}}" id="templateHeaderElement"
                    name="templateHeader" value="{{values.templateHeader}}">

                <div id="editor-html" class="code-editor"></div>
                <div class="editor-embed-block">
                    <div class="editor-embed-content editor-embed-content-left">
                        HTML content
                    </div>
                    <div class="editor-embed-content editor-embed-content-right">
                        <a href="#" class="toggle-fullscreen" data-target="editor-html">Toggle fullscreen</a>
                    </div>
                </div>

                {{#if errors.templateHeader}}
                <span class="invalid-feedback">{{errors.templateHeader}}</span>
                {{/if}}

                <small class="form-text text-muted">Enter the HTML code you want to display at the <u
                        data-toggle="popover" data-trigger="hover" data-html="true"
                        data-content="&#x3C;img src=&#x22;/static/preview/header-template.png&#x22;&#x3E;"
                        style="cursor: default;">top of public pages</u> (e.g., the hosted authentication form).</small>
            </div>

            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">templateHtmlHead</a>]</div>

                <label>HTML Code for the &lt;head&gt; Section of Public Pages</label>

                <input type="hidden" class="{{#if errors.templateHtmlHead}}is-invalid{{/if}}"
                    id="templateHtmlHeadElement" name="templateHtmlHead" value="{{values.templateHtmlHead}}">

                <div id="editor-html-head" class="code-editor"></div>
                <div class="editor-embed-block">
                    <div class="editor-embed-content editor-embed-content-left">
                        HTML content
                    </div>
                    <div class="editor-embed-content editor-embed-content-right">
                        <a href="#" class="toggle-fullscreen" data-target="editor-html-head">Toggle fullscreen</a>
                    </div>
                </div>

                {{#if errors.templateHtmlHead}}
                <span class="invalid-feedback">{{errors.templateHtmlHead}}</span>
                {{/if}}

                <small class="form-text text-muted">Enter the HTML code you want to include within the &lt;head&gt;
                    section of public pages (e.g., the hosted authentication form).</small>
            </div>

        </div>
    </div>

    <div id="templates_settings" class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Pre-processing scripts</h6>
        </div>
        <div class="card-body">


            <p>The following options apply for pre-processing scripts like the <em>filter</em> and <em>map</em> function
                of the <a href="/admin/webhooks">webhook routes</a>.</p>

            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">scriptEnv</a>]</div>

                <label>Environment variable (JSON object)</label>

                <input type="hidden" class="{{#if errors.scriptEnv}}is-invalid{{/if}}" id="scriptEnvElement"
                    name="scriptEnv" value="{{values.scriptEnv}}">

                <div id="editor-env" class="code-editor"></div>
                <div class="editor-embed-block">
                    <div class="editor-embed-content editor-embed-content-left">
                        JSON content
                    </div>
                    <div class="editor-embed-content editor-embed-content-right">
                        <a href="#" class="toggle-fullscreen" data-target="editor-env">Toggle fullscreen</a>
                    </div>
                </div>

                {{#if errors.scriptEnv}}
                <span class="invalid-feedback">{{errors.scriptEnv}}</span>
                {{/if}}

                <small class="form-text text-muted">You can set here a JSON object that is used as the value of
                    <code>env</code> variable in all pre-processing scripts.</small>
            </div>

        </div>
    </div>

    <div id="labs"></div>

    <div class="card mb-4" id="tracking">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Sent Email Tracking</h6>
        </div>
        <div class="card-body">

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">trackClicks</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.trackClicks}}is-invalid{{/if}}"
                    id="trackClicks" name="trackClicks" {{#if values.trackClicks}}checked{{/if}} />
                <label class="form-check-label" for="trackClicks">Track Clicks</label>
                {{#if errors.trackClicks}}
                <span class="invalid-feedback">{{errors.trackClicks}}</span>
                {{/if}}
                <small class="form-text text-muted">When enabled, EmailEngine rewrites HTML links in emails sent through
                    the service to monitor and track user clicks.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">trackOpens</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.trackOpens}}is-invalid{{/if}}"
                    id="trackOpens" name="trackOpens" {{#if values.trackOpens}}checked{{/if}} />
                <label class="form-check-label" for="trackOpens">Track Opens</label>
                {{#if errors.trackOpens}}
                <span class="invalid-feedback">{{errors.trackOpens}}</span>
                {{/if}}
                <small class="form-text text-muted">When enabled, EmailEngine inserts an open beacon in HTML messages
                    sent through the service to track email opens.</small>
            </div>
        </div>

        <div class="card-footer">
            <strong>NB!</strong> <a href="{{values.serviceUrl}}" target="_blank"
                rel="noopener noreferrer">{{values.serviceUrl}}</a> must
            be publicly accessible for clicks and opens tracking to work. You can also set tracking options in the
            message level to
            override the defaults. See the <a href="https://emailengine.app/sending-emails#tracking" target="_blank"
                rel="noopener noreferrer" referrerpolicy="no-referrer">documentation</a> for
            details.</small>

        </div>
    </div>

    <div class="card mb-4" id="gmail">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Gmail-Specific Options</h6>
        </div>
        <div class="card-body">

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/swagger#/Settings/postV1Settings"
                        target="_blank" rel="noopener noreferrer">resolveGmailCategories</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.resolveGmailCategories}}is-invalid{{/if}}"
                    id="resolveGmailCategories" name="resolveGmailCategories" {{#if
                    values.resolveGmailCategories}}checked{{/if}} />
                <label class="form-check-label" for="resolveGmailCategories">Resolve Gmail Categories for IMAP
                    Accounts</label>
                {{#if errors.resolveGmailCategories}}
                <span class="invalid-feedback">{{errors.resolveGmailCategories}}</span>
                {{/if}}
                <small class="form-text text-muted">When enabled, EmailEngine determines the inbox category
                    (also known as the Gmail tab) for incoming emails when using Gmail IMAP. For accounts using
                    the Gmail API, category labels are resolved by default. The possible category values
                    include: <em>social</em>,
                    <em>promotions</em>, <em>updates</em>, <em>forums</em>, and <em>primary</em>. The resolved
                    category can be found in the <em>category</em> property of the <em>messageNew</em> webhook
                    payload.</small>
            </div>

        </div>
    </div>

    <div class="mb-4">
        <button type="submit" class="btn btn-primary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-cog"></i>
            </span>
            <span class="text">Update settings</span>
        </button>
    </div>

</form>

<form id="preview-form" method="post" action="/admin/config/service/preview">
    <input type="hidden" name="crumb" value="{{crumb}}" />
    <input type="hidden" name="templateHeader" id="preview-header-elm">
    <input type="hidden" name="templateHtmlHead" id="preview-head-elm">
    <input type="hidden" name="pageBrandName" id="preview-brand-name-elm">
</form>


<script src="/static/js/ace/ace.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {

        let showBt = document.getElementById('showServiceSecret');
        let serviceSecretElm = document.getElementById('settingsServiceSecret');

        let showSecret = () => {
            let current = serviceSecretElm.getAttribute('type')
            serviceSecretElm.setAttribute('type', current === 'text' ? 'password' : 'text');
            showBt.blur()
        }

        showBt.addEventListener('click', showSecret);

        const sendCleanPayload = async () => {

            const res = await fetch('/admin/config/service/clean', {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify({
                    crumb: document.getElementById('crumb').value
                })
            })
            if (!res.ok) {
                throw new Error(`HTTP error! status: ${res.status}`);
            }
            const data = await res.json();

            return data;
        }

        let sendingCleanRequest = false;
        document.getElementById('clean-queues-btn').addEventListener('click', e => {
            e.preventDefault();
            if (sendingCleanRequest) {
                e.stopPropagation();
                return
            }
            sendingCleanRequest = true;

            let cleanIconElm = document.querySelector('#clean-queues-btn .clean-icon');
            cleanIconElm.classList.remove('fa-trash-alt');
            cleanIconElm.classList.add('fa-spinner', 'fa-spin');

            sendCleanPayload().then(data => {
                sendingCleanRequest = false;
                cleanIconElm.classList.add('fa-trash-alt');
                cleanIconElm.classList.remove('fa-spinner', 'fa-spin');

                showToast(data.error ? data.error : (data.success ? 'Cleanup request sent' : 'Failed to send payload'), data.success ? 'check-circle' : 'alert-triangle');
            }).catch(err => {
                sendingCleanRequest = false;
                cleanIconElm.classList.add('fa-trash-alt');
                cleanIconElm.classList.remove('fa-spinner', 'fa-spin');

                showToast('Request failed\n' + err.message, 'alert-triangle');
            })
        });





        const editors = new Map();

        const editorHtml = ace.edit("editor-html", {
            enableBasicAutocompletion: true,
            enableSnippets: false,
            enableLiveAutocompletion: false,
            useWorker: true
        });
        editors.set("editor-html", editorHtml);

        editorHtml.setTheme("ace/theme/xcode");
        editorHtml.session.setMode("ace/mode/handlebars");
        editorHtml.session.setValue(document.getElementById('templateHeaderElement').value);

        const editorEnv = ace.edit("editor-env", {
            enableBasicAutocompletion: true,
            enableSnippets: false,
            enableLiveAutocompletion: false,
            useWorker: true
        });
        editors.set("editor-env", editorEnv);

        editorEnv.setTheme("ace/theme/xcode");
        editorEnv.session.setMode("ace/mode/json");
        editorEnv.session.setValue(document.getElementById('scriptEnvElement').value);

        const editorHtmlHead = ace.edit("editor-html-head", {
            enableBasicAutocompletion: true,
            enableSnippets: false,
            enableLiveAutocompletion: false,
            useWorker: true
        });
        editors.set("editor-html-head", editorHtmlHead);

        editorHtmlHead.setTheme("ace/theme/xcode");
        editorHtmlHead.session.setMode("ace/mode/handlebars");
        editorHtmlHead.session.setValue(document.getElementById('templateHtmlHeadElement').value);


        document.getElementById('preview-header-btn').addEventListener('click', e => {
            e.preventDefault();
            let previewWindow = window.open('about:blank', 'preview-window', '');
            let previewForm = document.getElementById('preview-form');
            previewForm.target = 'preview-window';

            document.getElementById('preview-brand-name-elm').value = document.getElementById('settingsPageBrandName').value;
            document.getElementById('preview-header-elm').value = editorHtml.getValue();
            document.getElementById('preview-head-elm').value = editorHtmlHead.getValue();

            previewForm.submit();
        });

        document.getElementById('settings-form').addEventListener('submit', () => {
            document.getElementById('templateHeaderElement').value = editorHtml.getValue();
            document.getElementById('scriptEnvElement').value = editorEnv.getValue();
            document.getElementById('templateHtmlHeadElement').value = editorHtmlHead.getValue();
        });

        for (let toggleElm of document.querySelectorAll('.toggle-fullscreen')) {
            let target = toggleElm.dataset.target;
            if (!editors.has(target)) {
                continue
            }
            let targetElm = document.getElementById(target);
            let editor = editors.get(target)

            toggleElm.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                targetElm.classList.toggle('full-screen-div');
                editor.resize();
                editor.focus();
            });

            targetElm.addEventListener('keydown', e => {
                if (e.key === 'Escape' && targetElm.classList.contains('full-screen-div')) {
                    targetElm.classList.remove('full-screen-div')
                    editor.resize();
                    editor.focus();
                }
            });
        }

    });


</script>